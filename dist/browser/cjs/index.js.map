{"version":3,"file":"index.js","sources":["../../../src/MIMETextError.js","../../../src/MIMEMessageHeader.js","../../../src/MIMEMessageContent.js","../../../src/Mailbox.js","../../../src/MIMEMessage.js","../../../src/entrypoints/browser.js"],"sourcesContent":["export default class MIMETextError extends Error {\n  constructor(message, description) {\n    super(message)\n    this.description = description ? description.trim().replace(/[\\s]{2,}/, ' ') : null\n    this.name = 'MIMETextError'\n  }\n}\n","import MIMETextError from './MIMETextError.js'\n\n/*\n* Headers are based on: https://www.rfc-editor.org/rfc/rfc4021#section-2.1\n* (Some are ignored as they can be added later or as a custom header.)\n*/\n\nexport default class MIMEMessageHeader {\n  constructor(placement) {\n    this.placement = placement\n    this.store = [\n      {\n        placement: 'header',\n        name: 'Date',\n        // value property is what user sets for this header\n        value: null,\n        // the generator function generates a value for this header unless\n        // user specified a value or user disabled this property\n        generator: () => (new Date().toGMTString()).replace(/GMT|UTC/gi, '+0000'),\n        disabled: false,\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'header',\n        name: 'From',\n        // required property indicates that this property must be set\n        required: true,\n        dump: (v) => {\n          return v.dump()\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Sender',\n        dump: (v) => {\n          return v.dump()\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Reply-To',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'header',\n        name: 'To',\n        required: true,\n        dump: (vs) => {\n          return vs.map(v => v.dump()).join(', ')\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Cc',\n        dump: (vs) => {\n          return vs.map(v => v.dump()).join(', ')\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Bcc',\n        dump: (vs) => {\n          return vs.map(v => v.dump()).join(', ')\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Message-ID',\n        disabled: false,\n        generator: (ctx) => {\n          const datestr = Date.now().toString()\n          const randomstr = Math.random().toString(36).slice(2)\n          const domain = ctx.store.filter(item => item.name == 'From')[0].value.getAddrDomain()\n          return '<' + randomstr + '-' + datestr + '@' + domain + '>'\n        },\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Subject',\n        required: true,\n        dump: (v, ctx) => {\n          return '=?utf-8?B?' + ctx.toBase64(v) + '?='\n        }\n      },\n      {\n        placement: 'header',\n        name: 'MIME-Version',\n        generator: () => '1.0',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-ID',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-Type',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-Transfer-Encoding',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-Disposition',\n        dump: (v) => {\n          return v\n        }\n      }\n    ]\n  }\n\n  set(name, value) {\n    for (const item of this.store) {\n      if (item.name.toLowerCase() == name.toLowerCase()) {\n        item.value = value\n        return item\n      }\n    }\n\n    const newHeader = {\n      custom: true,\n      placement: this.placement,\n      name: name,\n      value: value,\n      dump: (v) => {\n        return v\n      }\n    }\n\n    this.store.push(newHeader)\n\n    return newHeader\n  }\n\n  get(name) {\n    for (const item of this.store) {\n      if (item.name.toLowerCase() == name.toLowerCase()) {\n        return item.value\n      }\n    }\n    return undefined\n  }\n\n  toObject() {\n    return this.store.reduce((memo, item) => {\n      memo[item.name] = item.value\n      return memo\n    }, {})\n  }\n\n  dump(envctx) {\n    const ctx = {\n      toBase64: envctx.toBase64,\n      store: this.store\n    }\n\n    let lines = ''\n    for (const item of this.store) {\n      if (item.placement != this.placement) continue;\n\n      const v = item.value\n        ? item.value\n        : !item.disabled && typeof item.generator == 'function'\n          ? item.generator(ctx)\n          : null\n\n      if (!v && item.required) {\n        throw new MIMETextError('MISSING_HEADER', `The \"${item.name}\" header is required.`)\n      }\n\n      if (!v) continue;\n\n      lines += `${item.name}: ${item.dump(v, ctx)}\\r\\n`\n    }\n\n    return lines.slice(0, -2)\n  }\n}\n","import MIMEMessageHeader from './MIMEMessageHeader.js'\n\nexport default class MIMEMessageContent {\n  constructor(data) {\n    this.data = data\n    this.headers = new MIMEMessageHeader('content')\n  }\n\n  setHeader() {\n    this.headers.set(arguments[0], arguments[1])\n    return this\n  }\n\n  setHeaders(obj) {\n    Object.keys(obj).map(prop => this.setHeader(prop, obj[prop]))\n    return this\n  }\n\n  getHeaders() {\n    return this.headers.toObject()\n  }\n\n  getHeader(name) {\n    return this.headers.get(name)\n  }\n\n  isAttachment() {\n    const d = this.headers.get('Content-Disposition')\n    return d && d.indexOf('attachment') !== -1 ? true : false\n  }\n\n  dump(envctx, boundaries) {\n    const headerBlock = this.headers.dump(envctx)\n\n    if (this.isAttachment()) {\n      return `--${boundaries.mixed}\n${headerBlock}\n\n${this.data}\n`\n    }\n    else {\n      return `${headerBlock}\\r\\n\\r\\n${this.data}`\n    }\n  }\n}\n","import MIMETextError from './MIMETextError.js'\n\nexport default class Mailbox {\n  constructor(input, opts={type: 'to'}) {\n    this.reSpecCompliantAddr = /(([^<>\\n\\r]+)\\s)?<[^\\n\\r]+>/\n\n    this.name = null\n    this.addr = null\n    this.type = opts.type || 'to'\n    this.input = input\n    this.inputType = this.findInputType(input)\n\n    this.createMailbox()\n  }\n\n  findInputType(input) {\n    if (Object.prototype.toString.call(input) === '[object Object]') {\n      if (!input.addr) {\n        throw new MIMETextError('INVALID_MAILBOX', `\n          The input should have an \"addr\" property that specifies the email address \\\n          of the recipient.\n        `)\n      }\n      return 'OBJECT'\n    }\n    else if (this.reSpecCompliantAddr.test(input)) {\n      return 'SPEC_COMPLIANT_TEXT'\n    }\n    else if (typeof input == 'string') {\n      return 'TEXT'\n    }\n    else {\n      throw new MIMETextError('INVALID_MAILBOX')\n    }\n  }\n\n  parseSpecCompliantText(text) {\n    text.trim()\n\n    if (text.slice(0, 1) == '<' && text.slice(-1) == '>') {\n      return {addr: text.slice(1, -1)}\n    }\n\n    const arr = text.split(' <')\n    arr[0] = /^(\"|')/.test(arr[0]) ? arr[0].slice(1) : arr[0]\n    arr[0] = /(\"|')$/.test(arr[0]) ? arr[0].slice(0, -1) : arr[0]\n    arr[1] = arr[1].slice(0, -1)\n\n    return {name: arr[0], addr: arr[1]}\n  }\n\n  createMailbox() {\n    switch (this.inputType) {\n      case 'OBJECT':\n        this.addr = this.input.addr\n        this.name = this.input.name || null\n        this.type = this.input.type || this.type\n        break;\n\n      case 'SPEC_COMPLIANT_TEXT':\n        const obj = this.parseSpecCompliantText(this.input)\n        this.addr = obj.addr\n        this.name = obj.name || null\n        break;\n\n      case 'TEXT':\n        this.addr = this.input\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getAddrDomain() {\n    if (!this.addr) {\n      return ''\n    }\n\n    return this.addr.split('@')[1]\n  }\n\n  dump() {\n    let result = `<${this.addr}>`\n\n    if (this.name) {\n      result = `\"${this.name}\" ${result}`\n    }\n\n    return result\n  }\n\n  toObject() {\n    return {\n      name: this.name,\n      addr: this.addr,\n      type: this.type\n    }\n  }\n}\n","import MIMEMessageHeader from './MIMEMessageHeader.js'\nimport MIMEMessageContent from './MIMEMessageContent.js'\nimport MIMETextError from './MIMETextError.js'\nimport Mailbox from './Mailbox.js'\n\nexport default class MIMEMessage {\n  constructor(envctx) {\n    this.envctx = envctx\n    this.headers = new MIMEMessageHeader('header')\n    this.messages = []\n\n    this.generateBoundaries()\n  }\n\n  generateBoundaries() {\n    this.boundaries = {\n      mixed: Math.random().toString(36).slice(2),\n      alt: Math.random().toString(36).slice(2)\n    }\n  }\n\n  setSender(input) {\n    const mailbox = new Mailbox(input, {type: 'from'})\n\n    this.setHeader('From', mailbox)\n\n    return mailbox\n  }\n\n  getSender() {\n    return this.getHeader('From')\n  }\n\n  setRecipients(input, opts={type: 'to'}) {\n    const recs = []\n\n    if (Array.isArray(input)) {\n      input.map(input => recs.push( new Mailbox(input, opts) ))\n    }\n    else {\n      recs.push( new Mailbox(input, opts) )\n    }\n\n    this.setHeader(opts.type, recs)\n\n    return recs\n  }\n\n  getRecipients(opts={type: 'to'}) {\n    return this.getHeader(opts.type) || []\n  }\n\n  setRecipient(input) {\n    return this.setRecipients(input, {type: 'to'})\n  }\n\n  setTo(input) {\n    return this.setRecipients(input, {type: 'to'})\n  }\n\n  setCc(input) {\n    return this.setRecipients(input, {type: 'cc'})\n  }\n\n  setBcc(input) {\n    return this.setRecipients(input, {type: 'bcc'})\n  }\n\n  setSubject(value) {\n    this.setHeader('subject', value)\n    return value\n  }\n\n  getSubject() {\n    return this.getHeader('subject')\n  }\n\n  setHeader() {\n    this.headers.set(arguments[0], arguments[1])\n    return arguments[0]\n  }\n\n  getHeader(name) {\n    return this.headers.get(name)\n  }\n\n  setHeaders(obj) {\n    Object.keys(obj).map(prop => this.setHeader(prop, obj[prop]))\n    return this\n  }\n\n  getHeaders() {\n    return this.headers.toObject()\n  }\n\n  setMessage(type, data, moreHeaders={}) {\n    const validTypes = ['text/html', 'text/plain']\n\n    if (validTypes.indexOf(type) === -1) {\n      throw new MIMETextError('INVALID_MESSAGE_TYPE', `\n        Invalid content type for the message. Supported content types \\\n        are ${validTypes.join(', ')} but you specified \"${type}\".\n      `)\n    }\n\n    const headers = Object.assign({}, moreHeaders, {\n      'Content-Type': `${type}; charset=UTF-8`\n    })\n    const msg = new MIMEMessageContent(data)\n\n    msg.setHeaders(headers)\n\n    this.messages.push(msg)\n\n    return msg\n  }\n\n  setAttachment(filename, type, data, moreHeaders={}) {\n    const headers = Object.assign({}, moreHeaders, {\n      'Content-Type': `${type}; charset=UTF-8`,\n      'Content-Transfer-Encoding': 'base64',\n      'Content-Disposition': `attachment;filename=\"${filename}\"`\n    })\n    const msg = new MIMEMessageContent(data)\n\n    msg.setHeaders(headers)\n\n    this.messages.push(msg)\n\n    return this\n  }\n\n  getMessageByType(type) {\n    const matches = this.messages.filter(m => m.getHeader('Content-Type').indexOf(type) !== -1)\n    if (Array.isArray(matches) && matches.length > 0) {\n      return matches[0]\n    }\n    else {\n      return undefined\n    }\n  }\n\n  getAttachments() {\n    return this.messages.filter(m => m.isAttachment() === true) || []\n  }\n\n  asRaw() {\n    let lines = this.headers.dump(this.envctx)\n\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const hasAttachments = this.getAttachments().length > 0\n    const hasPlainTextAlt = plainTextMessage instanceof MIMEMessageContent && htmlMessage instanceof MIMEMessageContent\n\n    if (hasAttachments && hasPlainTextAlt) {\n      return this.asRawMixedAlt(lines)\n    }\n    else if (hasAttachments) {\n      return this.asRawMixed(lines)\n    }\n    else if (hasPlainTextAlt) {\n      return this.asRawAlt(lines)\n    }\n    else {\n      return this.asRawMessage(lines)\n    }\n  }\n\n  asEncoded() {\n    return this.envctx.toBase64WebSafe( this.asRaw() )\n  }\n\n  asRawMessage(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const message = htmlMessage || plainTextMessage\n\n    lines = `${lines}\n${message.dump(this.envctx, this.boundaries)}`\n\n    return lines\n  }\n\n  asRawAlt(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n\n    lines = `${lines}\nContent-Type: multipart/alternative; boundary=${this.boundaries.alt}\n\n--${this.boundaries.alt}\n${plainTextMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}\n${htmlMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}--`\n\n    return lines\n  }\n\n  asRawMixed(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const message = htmlMessage || plainTextMessage\n    const attachments = this.getAttachments()\n      .map(a => a.dump(this.envctx, this.boundaries))\n      .join('')\n      .replace(/[\\r\\n]$/g, '')\n\n    lines = `${lines}\nContent-Type: multipart/mixed; boundary=${this.boundaries.mixed}\n\n--${this.boundaries.mixed}\n${message.dump(this.envctx, this.boundaries)}\n\n${attachments}\n\n--${this.boundaries.mixed}--`\n\n    return lines\n  }\n\n  asRawMixedAlt(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const attachments = this.getAttachments()\n      .map(a => a.dump(this.envctx, this.boundaries))\n      .join('')\n      .replace(/[\\r\\n]$/g, '')\n\n    lines = `${lines}\nContent-Type: multipart/mixed; boundary=${this.boundaries.mixed}\n\n--${this.boundaries.mixed}\nContent-Type: multipart/alternative; boundary=${this.boundaries.alt}\n\n--${this.boundaries.alt}\n${plainTextMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}\n${htmlMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}--\n${attachments}\n\n--${this.boundaries.mixed}--`\n\n    return lines\n  }\n\n  toBase64(v) {\n    return this.envctx.toBase64(v)\n  }\n}\n","import MIMEMessage from '../MIMEMessage.js'\n\nconst defaultBrowserEnvCtx = {\n  toBase64: function toBase64(data) {\n    return btoa(data)\n  },\n  toBase64WebSafe: function toBase64WebSafe(data) {\n    return btoa(data)\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '')\n  }\n}\n\nclass NodeMIMEMessage extends MIMEMessage {\n  constructor(envctx) {\n    super({...defaultBrowserEnvCtx, ...envctx})\n  }\n}\n\nexport function createMimeMessage(envctx) {\n  return new NodeMIMEMessage(envctx)\n}\n"],"names":["MIMETextError","message","description","_classCallCheck","_trimInstanceProperty","replace","name","Error","MIMEMessageHeader","placement","store","value","generator","Date","toGMTString","disabled","dump","v","required","vs","_mapInstanceProperty","join","ctx","datestr","now","toString","randomstr","_sliceInstanceProperty","Math","random","domain","_filterInstanceProperty","item","getAddrDomain","toBase64","toLowerCase","newHeader","custom","push","undefined","_reduceInstanceProperty","memo","envctx","lines","MIMEMessageContent","data","headers","set","arguments","obj","prop","setHeader","toObject","get","d","_indexOfInstanceProperty","boundaries","headerBlock","isAttachment","_concatInstanceProperty","mixed","Mailbox","input","opts","type","reSpecCompliantAddr","addr","inputType","findInputType","createMailbox","Object","prototype","call","test","text","arr","split","parseSpecCompliantText","result","MIMEMessage","messages","generateBoundaries","alt","mailbox","getHeader","recs","Array","isArray","setRecipients","moreHeaders","validTypes","_Object$assign","msg","setHeaders","filename","matches","m","length","plainTextMessage","getMessageByType","htmlMessage","hasAttachments","getAttachments","hasPlainTextAlt","asRawMixedAlt","asRawMixed","asRawAlt","asRawMessage","toBase64WebSafe","asRaw","attachments","a","defaultBrowserEnvCtx","btoa","NodeMIMEMessage","createMimeMessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA;;;;;EACnB,SAAYC,aAAAA,CAAAA,OAAZ,EAAqBC,WAArB,EAAkC;AAAA,IAAA,IAAA,KAAA,CAAA;;AAAA,IAAAC,mCAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA;;AAChC,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAMF,OAAN,CAAA,CAAA;AACA,IAAA,KAAA,CAAKC,WAAL,GAAmBA,WAAW,GAAGE,yCAAA,CAAAF,WAAW,CAAX,CAAA,IAAA,CAAAA,WAAW,CAAA,CAAQG,OAAnB,CAA2B,UAA3B,EAAuC,GAAvC,CAAH,GAAiD,IAA/E,CAAA;IACA,KAAKC,CAAAA,IAAL,GAAY,eAAZ,CAAA;AAHgC,IAAA,OAAA,KAAA,CAAA;AAIjC,GAAA;;;qDALwCC;;;;;;;ACE3C;AACA;AACA;AACA;;IAEqBC;AACnB,EAAA,SAAA,iBAAA,CAAYC,SAAZ,EAAuB;AAAA,IAAAN,mCAAA,CAAA,IAAA,EAAA,iBAAA,CAAA,CAAA;;IACrB,IAAKM,CAAAA,SAAL,GAAiBA,SAAjB,CAAA;IACA,IAAKC,CAAAA,KAAL,GAAa,CACX;AACED,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,MAFR;AAGE;AACAK,MAAAA,KAAK,EAAE,IAJT;AAKE;AACA;AACAC,MAAAA,SAAS,EAAE,SAAA,SAAA,GAAA;QAAA,OAAO,IAAIC,IAAJ,EAAA,CAAWC,WAAX,EAAD,CAA2BT,OAA3B,CAAmC,WAAnC,EAAgD,OAAhD,CAAN,CAAA;OAPb;AAQEU,MAAAA,QAAQ,EAAE,KARZ;MASEC,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AAXH,KADW,EAcX;AACER,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,MAFR;AAGE;AACAY,MAAAA,QAAQ,EAAE,IAJZ;MAKEF,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;QACX,OAAOA,CAAC,CAACD,IAAF,EAAP,CAAA;AACD,OAAA;AAPH,KAdW,EAuBX;AACEP,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,QAFR;MAGEU,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;QACX,OAAOA,CAAC,CAACD,IAAF,EAAP,CAAA;AACD,OAAA;AALH,KAvBW,EA8BX;AACEP,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,UAFR;MAGEU,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AALH,KA9BW,EAqCX;AACER,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,IAFR;AAGEY,MAAAA,QAAQ,EAAE,IAHZ;MAIEF,IAAI,EAAE,SAACG,IAAAA,CAAAA,EAAD,EAAQ;AACZ,QAAA,OAAOC,yCAAAD,EAAE,CAAA,CAAA,IAAF,CAAAA,EAAE,EAAK,UAAAF,CAAC,EAAA;UAAA,OAAIA,CAAC,CAACD,IAAF,EAAJ,CAAA;AAAA,SAAN,CAAF,CAAsBK,IAAtB,CAA2B,IAA3B,CAAP,CAAA;AACD,OAAA;AANH,KArCW,EA6CX;AACEZ,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,IAFR;MAGEU,IAAI,EAAE,SAACG,IAAAA,CAAAA,EAAD,EAAQ;AACZ,QAAA,OAAOC,yCAAAD,EAAE,CAAA,CAAA,IAAF,CAAAA,EAAE,EAAK,UAAAF,CAAC,EAAA;UAAA,OAAIA,CAAC,CAACD,IAAF,EAAJ,CAAA;AAAA,SAAN,CAAF,CAAsBK,IAAtB,CAA2B,IAA3B,CAAP,CAAA;AACD,OAAA;AALH,KA7CW,EAoDX;AACEZ,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,KAFR;MAGEU,IAAI,EAAE,SAACG,IAAAA,CAAAA,EAAD,EAAQ;AACZ,QAAA,OAAOC,yCAAAD,EAAE,CAAA,CAAA,IAAF,CAAAA,EAAE,EAAK,UAAAF,CAAC,EAAA;UAAA,OAAIA,CAAC,CAACD,IAAF,EAAJ,CAAA;AAAA,SAAN,CAAF,CAAsBK,IAAtB,CAA2B,IAA3B,CAAP,CAAA;AACD,OAAA;AALH,KApDW,EA2DX;AACEZ,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,YAFR;AAGES,MAAAA,QAAQ,EAAE,KAHZ;MAIEH,SAAS,EAAE,SAACU,SAAAA,CAAAA,GAAD,EAAS;AAAA,QAAA,IAAA,QAAA,EAAA,SAAA,CAAA;;AAClB,QAAA,IAAMC,OAAO,GAAGV,IAAI,CAACW,GAAL,EAAA,CAAWC,QAAX,EAAhB,CAAA;;AACA,QAAA,IAAMC,SAAS,GAAGC,0CAAAC,CAAAA,QAAAA,GAAAA,IAAI,CAACC,MAAL,EAAcJ,CAAAA,QAAd,CAAuB,EAAvB,CAAiC,CAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAjC,CAAlB,CAAA;;QACA,IAAMK,MAAM,GAAGC,2CAAAT,CAAAA,SAAAA,GAAAA,GAAG,CAACZ,KAAJ,CAAA,CAAA,IAAA,CAAA,SAAA,EAAiB,UAAAsB,IAAI,EAAA;AAAA,UAAA,OAAIA,IAAI,CAAC1B,IAAL,IAAa,MAAjB,CAAA;AAAA,SAArB,EAA8C,CAA9C,CAAA,CAAiDK,KAAjD,CAAuDsB,aAAvD,EAAf,CAAA;;QACA,OAAO,GAAA,GAAMP,SAAN,GAAkB,GAAlB,GAAwBH,OAAxB,GAAkC,GAAlC,GAAwCO,MAAxC,GAAiD,GAAxD,CAAA;OARJ;MAUEd,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AAZH,KA3DW,EAyEX;AACER,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,SAFR;AAGEY,MAAAA,QAAQ,EAAE,IAHZ;AAIEF,MAAAA,IAAI,EAAE,SAAA,IAAA,CAACC,CAAD,EAAIK,GAAJ,EAAY;QAChB,OAAO,YAAA,GAAeA,GAAG,CAACY,QAAJ,CAAajB,CAAb,CAAf,GAAiC,IAAxC,CAAA;AACD,OAAA;AANH,KAzEW,EAiFX;AACER,MAAAA,SAAS,EAAE,QADb;AAEEH,MAAAA,IAAI,EAAE,cAFR;AAGEM,MAAAA,SAAS,EAAE,SAAA,SAAA,GAAA;AAAA,QAAA,OAAM,KAAN,CAAA;OAHb;MAIEI,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AANH,KAjFW,EAyFX;AACER,MAAAA,SAAS,EAAE,SADb;AAEEH,MAAAA,IAAI,EAAE,YAFR;MAGEU,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AALH,KAzFW,EAgGX;AACER,MAAAA,SAAS,EAAE,SADb;AAEEH,MAAAA,IAAI,EAAE,cAFR;MAGEU,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AALH,KAhGW,EAuGX;AACER,MAAAA,SAAS,EAAE,SADb;AAEEH,MAAAA,IAAI,EAAE,2BAFR;MAGEU,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AALH,KAvGW,EA8GX;AACER,MAAAA,SAAS,EAAE,SADb;AAEEH,MAAAA,IAAI,EAAE,qBAFR;MAGEU,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AALH,KA9GW,CAAb,CAAA;AAsHD,GAAA;;;;WAED,SAAIX,GAAAA,CAAAA,IAAJ,EAAUK,KAAV,EAAiB;AAAA,MAAA,IAAA,SAAA,GAAA,0BAAA,CACI,KAAKD,KADT,CAAA;AAAA,UAAA,KAAA,CAAA;;AAAA,MAAA,IAAA;QACf,KAA+B,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,UAAA,IAApBsB,IAAoB,GAAA,KAAA,CAAA,KAAA,CAAA;;UAC7B,IAAIA,IAAI,CAAC1B,IAAL,CAAU6B,WAAV,MAA2B7B,IAAI,CAAC6B,WAAL,EAA/B,EAAmD;YACjDH,IAAI,CAACrB,KAAL,GAAaA,KAAb,CAAA;AACA,YAAA,OAAOqB,IAAP,CAAA;AACD,WAAA;AACF,SAAA;AANc,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,OAAA,SAAA;AAAA,QAAA,SAAA,CAAA,CAAA,EAAA,CAAA;AAAA,OAAA;;AAQf,MAAA,IAAMI,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,IADQ;QAEhB5B,SAAS,EAAE,KAAKA,SAFA;AAGhBH,QAAAA,IAAI,EAAEA,IAHU;AAIhBK,QAAAA,KAAK,EAAEA,KAJS;QAKhBK,IAAI,EAAE,SAACC,IAAAA,CAAAA,CAAD,EAAO;AACX,UAAA,OAAOA,CAAP,CAAA;AACD,SAAA;OAPH,CAAA;AAUA,MAAA,IAAA,CAAKP,KAAL,CAAW4B,IAAX,CAAgBF,SAAhB,CAAA,CAAA;AAEA,MAAA,OAAOA,SAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,GAAA,CAAI9B,IAAJ,EAAU;AAAA,MAAA,IAAA,UAAA,GAAA,0BAAA,CACW,KAAKI,KADhB,CAAA;AAAA,UAAA,MAAA,CAAA;;AAAA,MAAA,IAAA;QACR,KAA+B,UAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,UAAA,IAApBsB,IAAoB,GAAA,MAAA,CAAA,KAAA,CAAA;;UAC7B,IAAIA,IAAI,CAAC1B,IAAL,CAAU6B,WAAV,MAA2B7B,IAAI,CAAC6B,WAAL,EAA/B,EAAmD;YACjD,OAAOH,IAAI,CAACrB,KAAZ,CAAA;AACD,WAAA;AACF,SAAA;AALO,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,OAAA,SAAA;AAAA,QAAA,UAAA,CAAA,CAAA,EAAA,CAAA;AAAA,OAAA;;AAMR,MAAA,OAAO4B,SAAP,CAAA;AACD,KAAA;;;WAED,SAAW,QAAA,GAAA;AAAA,MAAA,IAAA,SAAA,CAAA;;AACT,MAAA,OAAOC,6DAAK9B,KAAL,CAAA,CAAA,IAAA,CAAA,SAAA,EAAkB,UAAC+B,IAAD,EAAOT,IAAP,EAAgB;QACvCS,IAAI,CAACT,IAAI,CAAC1B,IAAN,CAAJ,GAAkB0B,IAAI,CAACrB,KAAvB,CAAA;AACA,QAAA,OAAO8B,IAAP,CAAA;OAFK,EAGJ,EAHI,CAAP,CAAA;AAID,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKC,MAAL,EAAa;AACX,MAAA,IAAMpB,GAAG,GAAG;QACVY,QAAQ,EAAEQ,MAAM,CAACR,QADP;AAEVxB,QAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAAA;OAFd,CAAA;MAKA,IAAIiC,KAAK,GAAG,EAAZ,CAAA;;AANW,MAAA,IAAA,UAAA,GAAA,0BAAA,CAOQ,KAAKjC,KAPb,CAAA;AAAA,UAAA,MAAA,CAAA;;AAAA,MAAA,IAAA;QAOX,KAA+B,UAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,UAAA,IAAA,SAAA,CAAA;;AAAA,UAAA,IAApBsB,IAAoB,GAAA,MAAA,CAAA,KAAA,CAAA;AAC7B,UAAA,IAAIA,IAAI,CAACvB,SAAL,IAAkB,IAAA,CAAKA,SAA3B,EAAsC,SAAA;AAEtC,UAAA,IAAMQ,CAAC,GAAGe,IAAI,CAACrB,KAAL,GACNqB,IAAI,CAACrB,KADC,GAEN,CAACqB,IAAI,CAACjB,QAAN,IAAkB,OAAOiB,IAAI,CAACpB,SAAZ,IAAyB,UAA3C,GACEoB,IAAI,CAACpB,SAAL,CAAeU,GAAf,CADF,GAEE,IAJN,CAAA;;AAMA,UAAA,IAAI,CAACL,CAAD,IAAMe,IAAI,CAACd,QAAf,EAAyB;YACvB,MAAM,IAAIlB,aAAJ,CAAkB,gBAAlB,kBAA4CgC,IAAI,CAAC1B,IAAjD,EAAN,wBAAA,CAAA,CAAA,CAAA;AACD,WAAA;;UAED,IAAI,CAACW,CAAL,EAAQ,SAAA;AAER0B,UAAAA,KAAK,IAAOX,2CAAAA,CAAAA,SAAAA,GAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAI,CAAC1B,IAAZ,EAAqB0B,IAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAAA,IAAI,CAAChB,IAAL,CAAUC,CAAV,EAAaK,GAAb,CAArB,EAAL,MAAA,CAAA,CAAA;AACD,SAAA;AAvBU,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,OAAA,SAAA;AAAA,QAAA,UAAA,CAAA,CAAA,EAAA,CAAA;AAAA,OAAA;;MAyBX,OAAOK,0CAAA,CAAAgB,KAAK,CAAA,CAAA,IAAL,CAAAA,KAAK,EAAO,CAAP,EAAU,CAAC,CAAX,CAAZ,CAAA;AACD,KAAA;;;;;;ICjMkBC;AACnB,EAAA,SAAA,kBAAA,CAAYC,IAAZ,EAAkB;AAAA,IAAA1C,mCAAA,CAAA,IAAA,EAAA,kBAAA,CAAA,CAAA;;IAChB,IAAK0C,CAAAA,IAAL,GAAYA,IAAZ,CAAA;AACA,IAAA,IAAA,CAAKC,OAAL,GAAe,IAAItC,iBAAJ,CAAsB,SAAtB,CAAf,CAAA;AACD,GAAA;;;;WAED,SAAY,SAAA,GAAA;AACV,MAAA,IAAA,CAAKsC,OAAL,CAAaC,GAAb,CAAiBC,SAAS,CAAC,CAAD,CAA1B,EAA+BA,SAAS,CAAC,CAAD,CAAxC,CAAA,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,UAAA,CAAWC,GAAX,EAAgB;AAAA,MAAA,IAAA,QAAA;AAAA,UAAA,KAAA,GAAA,IAAA,CAAA;;MACd7B,wCAAY6B,CAAAA,QAAAA,GAAAA,gCAAAA,CAAAA,GAAZ,CAAqB,CAAA,CAAA,IAAA,CAAA,QAAA,EAAA,UAAAC,IAAI,EAAA;QAAA,OAAI,KAAI,CAACC,SAAL,CAAeD,IAAf,EAAqBD,GAAG,CAACC,IAAD,CAAxB,CAAJ,CAAA;OAAzB,CAAA,CAAA;;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;;WAED,SAAa,UAAA,GAAA;AACX,MAAA,OAAO,IAAKJ,CAAAA,OAAL,CAAaM,QAAb,EAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,SAAA,CAAU9C,IAAV,EAAgB;AACd,MAAA,OAAO,KAAKwC,OAAL,CAAaO,GAAb,CAAiB/C,IAAjB,CAAP,CAAA;AACD,KAAA;;;WAED,SAAe,YAAA,GAAA;MACb,IAAMgD,CAAC,GAAG,IAAKR,CAAAA,OAAL,CAAaO,GAAb,CAAiB,qBAAjB,CAAV,CAAA;AACA,MAAA,OAAOC,CAAC,IAAIC,4CAAA,CAAAD,CAAC,CAAA,CAAA,IAAD,CAAAA,CAAC,EAAS,YAAT,CAAD,KAA4B,CAAC,CAAlC,GAAsC,IAAtC,GAA6C,KAApD,CAAA;AACD,KAAA;;;WAED,SAAKZ,IAAAA,CAAAA,MAAL,EAAac,UAAb,EAAyB;MACvB,IAAMC,WAAW,GAAG,IAAKX,CAAAA,OAAL,CAAa9B,IAAb,CAAkB0B,MAAlB,CAApB,CAAA;;MAEA,IAAI,IAAA,CAAKgB,YAAL,EAAJ,EAAyB;AAAA,QAAA,IAAA,SAAA,EAAA,SAAA,CAAA;;AACvB,QAAA,OAAAC,2CAAA,CAAA,SAAA,GAAAA,2CAAA,CAAA,SAAA,GAAA,IAAA,CAAA,MAAA,CAAYH,UAAU,CAACI,KAAvB,yBACJH,WADI,EAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAGJ,KAAKZ,IAHD,EAAA,IAAA,CAAA,CAAA;AAKD,OAND,MAOK;AAAA,QAAA,IAAA,SAAA,CAAA;;QACH,OAAUY,2CAAAA,CAAAA,SAAAA,GAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAAV,EAAgC,UAAA,CAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAKZ,IAArC,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;;;;;IC1CkBgB;AACnB,EAAA,SAAA,OAAA,CAAYC,KAAZ,EAAsC;AAAA,IAAA,IAAnBC,IAAmB,GAAd,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA;AAACC,MAAAA,IAAI,EAAE,IAAA;KAAO,CAAA;;AAAA,IAAA7D,mCAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;IACpC,IAAK8D,CAAAA,mBAAL,GAA2B,6BAA3B,CAAA;IAEA,IAAK3D,CAAAA,IAAL,GAAY,IAAZ,CAAA;IACA,IAAK4D,CAAAA,IAAL,GAAY,IAAZ,CAAA;AACA,IAAA,IAAA,CAAKF,IAAL,GAAYD,IAAI,CAACC,IAAL,IAAa,IAAzB,CAAA;IACA,IAAKF,CAAAA,KAAL,GAAaA,KAAb,CAAA;AACA,IAAA,IAAA,CAAKK,SAAL,GAAiB,IAAA,CAAKC,aAAL,CAAmBN,KAAnB,CAAjB,CAAA;AAEA,IAAA,IAAA,CAAKO,aAAL,EAAA,CAAA;AACD,GAAA;;;;AAED,IAAA,KAAA,EAAA,SAAA,aAAA,CAAcP,KAAd,EAAqB;MACnB,IAAIQ,MAAM,CAACC,SAAP,CAAiB9C,QAAjB,CAA0B+C,IAA1B,CAA+BV,KAA/B,CAA0C,KAAA,iBAA9C,EAAiE;AAC/D,QAAA,IAAI,CAACA,KAAK,CAACI,IAAX,EAAiB;AACf,UAAA,MAAM,IAAIlE,aAAJ,CAAkB,iBAAlB,EAAN,+HAAA,CAAA,CAAA;AAID,SAAA;;AACD,QAAA,OAAO,QAAP,CAAA;OAPF,MASK,IAAI,IAAKiE,CAAAA,mBAAL,CAAyBQ,IAAzB,CAA8BX,KAA9B,CAAJ,EAA0C;AAC7C,QAAA,OAAO,qBAAP,CAAA;AACD,OAFI,MAGA,IAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AACjC,QAAA,OAAO,MAAP,CAAA;AACD,OAFI,MAGA;AACH,QAAA,MAAM,IAAI9D,aAAJ,CAAkB,iBAAlB,CAAN,CAAA;AACD,OAAA;AACF,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,sBAAA,CAAuB0E,IAAvB,EAA6B;AAAA,MAAA,IAAA,QAAA,EAAA,SAAA,EAAA,SAAA,CAAA;;MAC3BtE,yCAAAsE,CAAAA,IAAI,CAAJ,CAAA,IAAA,CAAAA,IAAI,CAAA,CAAA;;MAEJ,IAAI/C,0CAAA,CAAA+C,IAAI,CAAA,CAAA,IAAJ,CAAAA,IAAI,EAAO,CAAP,EAAU,CAAV,CAAJ,IAAoB,GAApB,IAA2B/C,0CAAA+C,CAAAA,IAAI,CAAJ,CAAA,IAAA,CAAAA,IAAI,EAAO,CAAC,CAAR,CAAJ,IAAkB,GAAjD,EAAsD;QACpD,OAAO;UAACR,IAAI,EAAEvC,0CAAA+C,CAAAA,IAAI,CAAJ,CAAA,IAAA,CAAAA,IAAI,EAAO,CAAP,EAAU,CAAC,CAAX,CAAA;SAAlB,CAAA;AACD,OAAA;;AAED,MAAA,IAAMC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAZ,CAAA;MACAD,GAAG,CAAC,CAAD,CAAH,GAAS,QAAA,CAASF,IAAT,CAAcE,GAAG,CAAC,CAAD,CAAjB,CAAA,GAAwBhD,sDAAAgD,GAAG,CAAC,CAAD,CAAH,CAAa,CAAA,IAAA,CAAA,QAAA,EAAA,CAAb,CAAxB,GAA0CA,GAAG,CAAC,CAAD,CAAtD,CAAA;MACAA,GAAG,CAAC,CAAD,CAAH,GAAS,QAAA,CAASF,IAAT,CAAcE,GAAG,CAAC,CAAD,CAAjB,CAAwB,GAAAhD,0CAAA,CAAA,SAAA,GAAAgD,GAAG,CAAC,CAAD,CAAH,CAAa,CAAA,IAAA,CAAA,SAAA,EAAA,CAAb,EAAgB,CAAC,CAAjB,CAAxB,GAA8CA,GAAG,CAAC,CAAD,CAA1D,CAAA;AACAA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAShD,uDAAAgD,GAAG,CAAC,CAAD,CAAH,CAAa,CAAA,IAAA,CAAA,SAAA,EAAA,CAAb,EAAgB,CAAC,CAAjB,CAAT,CAAA;MAEA,OAAO;AAACrE,QAAAA,IAAI,EAAEqE,GAAG,CAAC,CAAD,CAAV;QAAeT,IAAI,EAAES,GAAG,CAAC,CAAD,CAAA;OAA/B,CAAA;AACD,KAAA;;;WAED,SAAgB,aAAA,GAAA;AACd,MAAA,QAAQ,KAAKR,SAAb;AACE,QAAA,KAAK,QAAL;AACE,UAAA,IAAA,CAAKD,IAAL,GAAY,IAAKJ,CAAAA,KAAL,CAAWI,IAAvB,CAAA;AACA,UAAA,IAAA,CAAK5D,IAAL,GAAY,IAAA,CAAKwD,KAAL,CAAWxD,IAAX,IAAmB,IAA/B,CAAA;UACA,IAAK0D,CAAAA,IAAL,GAAY,IAAKF,CAAAA,KAAL,CAAWE,IAAX,IAAmB,KAAKA,IAApC,CAAA;AACA,UAAA,MAAA;;AAEF,QAAA,KAAK,qBAAL;AACE,UAAA,IAAMf,GAAG,GAAG,IAAA,CAAK4B,sBAAL,CAA4B,IAAA,CAAKf,KAAjC,CAAZ,CAAA;AACA,UAAA,IAAA,CAAKI,IAAL,GAAYjB,GAAG,CAACiB,IAAhB,CAAA;AACA,UAAA,IAAA,CAAK5D,IAAL,GAAY2C,GAAG,CAAC3C,IAAJ,IAAY,IAAxB,CAAA;AACA,UAAA,MAAA;;AAEF,QAAA,KAAK,MAAL;UACE,IAAK4D,CAAAA,IAAL,GAAY,IAAA,CAAKJ,KAAjB,CAAA;AACA,UAAA,MAAA;AAfJ,OAAA;AAoBD,KAAA;;;WAED,SAAgB,aAAA,GAAA;MACd,IAAI,CAAC,IAAKI,CAAAA,IAAV,EAAgB;AACd,QAAA,OAAO,EAAP,CAAA;AACD,OAAA;;MAED,OAAO,IAAA,CAAKA,IAAL,CAAUU,KAAV,CAAgB,GAAhB,CAAA,CAAqB,CAArB,CAAP,CAAA;AACD,KAAA;;;WAED,SAAO,IAAA,GAAA;AACL,MAAA,IAAIE,MAAM,GAAA,GAAA,CAAA,MAAA,CAAO,IAAKZ,CAAAA,IAAZ,EAAV,GAAA,CAAA,CAAA;;MAEA,IAAI,IAAA,CAAK5D,IAAT,EAAe;AAAA,QAAA,IAAA,SAAA,CAAA;;AACbwE,QAAAA,MAAM,GAAOnB,2CAAA,CAAA,SAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAKrD,IAAZ,EAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAAqBwE,MAArB,CAAN,CAAA;AACD,OAAA;;AAED,MAAA,OAAOA,MAAP,CAAA;AACD,KAAA;;;WAED,SAAW,QAAA,GAAA;MACT,OAAO;QACLxE,IAAI,EAAE,KAAKA,IADN;QAEL4D,IAAI,EAAE,KAAKA,IAFN;AAGLF,QAAAA,IAAI,EAAE,IAAKA,CAAAA,IAAAA;OAHb,CAAA;AAKD,KAAA;;;;;;IC7FkBe;AACnB,EAAA,SAAA,WAAA,CAAYrC,MAAZ,EAAoB;AAAA,IAAAvC,mCAAA,CAAA,IAAA,EAAA,WAAA,CAAA,CAAA;;IAClB,IAAKuC,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACA,IAAA,IAAA,CAAKI,OAAL,GAAe,IAAItC,iBAAJ,CAAsB,QAAtB,CAAf,CAAA;IACA,IAAKwE,CAAAA,QAAL,GAAgB,EAAhB,CAAA;AAEA,IAAA,IAAA,CAAKC,kBAAL,EAAA,CAAA;AACD,GAAA;;;;WAED,SAAqB,kBAAA,GAAA;AAAA,MAAA,IAAA,QAAA,EAAA,SAAA,CAAA;;AACnB,MAAA,IAAA,CAAKzB,UAAL,GAAkB;QAChBI,KAAK,EAAEjC,0CAAAC,CAAAA,QAAAA,GAAAA,IAAI,CAACC,MAAL,EAAcJ,CAAAA,QAAd,CAAuB,EAAvB,CAAiC,CAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAjC,CADS;QAEhByD,GAAG,EAAEvD,0CAAAC,CAAAA,SAAAA,GAAAA,IAAI,CAACC,MAAL,GAAcJ,QAAd,CAAuB,EAAvB,CAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAAiC,CAAjC,CAAA;OAFP,CAAA;AAID,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,SAAA,CAAUqC,KAAV,EAAiB;AACf,MAAA,IAAMqB,OAAO,GAAG,IAAItB,OAAJ,CAAYC,KAAZ,EAAmB;AAACE,QAAAA,IAAI,EAAE,MAAA;AAAP,OAAnB,CAAhB,CAAA;AAEA,MAAA,IAAA,CAAKb,SAAL,CAAe,MAAf,EAAuBgC,OAAvB,CAAA,CAAA;AAEA,MAAA,OAAOA,OAAP,CAAA;AACD,KAAA;;;WAED,SAAY,SAAA,GAAA;AACV,MAAA,OAAO,IAAKC,CAAAA,SAAL,CAAe,MAAf,CAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,aAAA,CAActB,KAAd,EAAwC;AAAA,MAAA,IAAnBC,IAAmB,GAAd,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA;AAACC,QAAAA,IAAI,EAAE,IAAA;OAAO,CAAA;MACtC,IAAMqB,IAAI,GAAG,EAAb,CAAA;;AAEA,MAAA,IAAIC,KAAK,CAACC,OAAN,CAAczB,KAAd,CAAJ,EAA0B;AACxB,QAAA1C,wCAAA,CAAA0C,KAAK,CAAL,CAAA,IAAA,CAAAA,KAAK,EAAK,UAAAA,KAAK,EAAA;UAAA,OAAIuB,IAAI,CAAC/C,IAAL,CAAW,IAAIuB,OAAJ,CAAYC,KAAZ,EAAmBC,IAAnB,CAAX,CAAJ,CAAA;AAAA,SAAV,CAAL,CAAA;AACD,OAFD,MAGK;QACHsB,IAAI,CAAC/C,IAAL,CAAW,IAAIuB,OAAJ,CAAYC,KAAZ,EAAmBC,IAAnB,CAAX,CAAA,CAAA;AACD,OAAA;;AAED,MAAA,IAAA,CAAKZ,SAAL,CAAeY,IAAI,CAACC,IAApB,EAA0BqB,IAA1B,CAAA,CAAA;AAEA,MAAA,OAAOA,IAAP,CAAA;AACD,KAAA;;;WAED,SAAiC,aAAA,GAAA;AAAA,MAAA,IAAnBtB,IAAmB,GAAd,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA;AAACC,QAAAA,IAAI,EAAE,IAAA;OAAO,CAAA;AAC/B,MAAA,OAAO,KAAKoB,SAAL,CAAerB,IAAI,CAACC,IAApB,KAA6B,EAApC,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,YAAA,CAAaF,KAAb,EAAoB;AAClB,MAAA,OAAO,IAAK0B,CAAAA,aAAL,CAAmB1B,KAAnB,EAA0B;AAACE,QAAAA,IAAI,EAAE,IAAA;AAAP,OAA1B,CAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,KAAA,CAAMF,KAAN,EAAa;AACX,MAAA,OAAO,IAAK0B,CAAAA,aAAL,CAAmB1B,KAAnB,EAA0B;AAACE,QAAAA,IAAI,EAAE,IAAA;AAAP,OAA1B,CAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,KAAA,CAAMF,KAAN,EAAa;AACX,MAAA,OAAO,IAAK0B,CAAAA,aAAL,CAAmB1B,KAAnB,EAA0B;AAACE,QAAAA,IAAI,EAAE,IAAA;AAAP,OAA1B,CAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOF,KAAP,EAAc;AACZ,MAAA,OAAO,IAAK0B,CAAAA,aAAL,CAAmB1B,KAAnB,EAA0B;AAACE,QAAAA,IAAI,EAAE,KAAA;AAAP,OAA1B,CAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,UAAA,CAAWrD,KAAX,EAAkB;AAChB,MAAA,IAAA,CAAKwC,SAAL,CAAe,SAAf,EAA0BxC,KAA1B,CAAA,CAAA;AACA,MAAA,OAAOA,KAAP,CAAA;AACD,KAAA;;;WAED,SAAa,UAAA,GAAA;AACX,MAAA,OAAO,IAAKyE,CAAAA,SAAL,CAAe,SAAf,CAAP,CAAA;AACD,KAAA;;;WAED,SAAY,SAAA,GAAA;AACV,MAAA,IAAA,CAAKtC,OAAL,CAAaC,GAAb,CAAiBC,SAAS,CAAC,CAAD,CAA1B,EAA+BA,SAAS,CAAC,CAAD,CAAxC,CAAA,CAAA;MACA,OAAOA,SAAS,CAAC,CAAD,CAAhB,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,SAAA,CAAU1C,IAAV,EAAgB;AACd,MAAA,OAAO,KAAKwC,OAAL,CAAaO,GAAb,CAAiB/C,IAAjB,CAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,UAAA,CAAW2C,GAAX,EAAgB;AAAA,MAAA,IAAA,SAAA;AAAA,UAAA,KAAA,GAAA,IAAA,CAAA;;MACd7B,wCAAY6B,CAAAA,SAAAA,GAAAA,gCAAAA,CAAAA,GAAZ,CAAqB,CAAA,CAAA,IAAA,CAAA,SAAA,EAAA,UAAAC,IAAI,EAAA;QAAA,OAAI,KAAI,CAACC,SAAL,CAAeD,IAAf,EAAqBD,GAAG,CAACC,IAAD,CAAxB,CAAJ,CAAA;OAAzB,CAAA,CAAA;;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;;WAED,SAAa,UAAA,GAAA;AACX,MAAA,OAAO,IAAKJ,CAAAA,OAAL,CAAaM,QAAb,EAAP,CAAA;AACD,KAAA;;;WAED,SAAWY,UAAAA,CAAAA,IAAX,EAAiBnB,IAAjB,EAAuC;MAAA,IAAhB4C,WAAgB,uEAAJ,EAAI,CAAA;AACrC,MAAA,IAAMC,UAAU,GAAG,CAAC,WAAD,EAAc,YAAd,CAAnB,CAAA;;MAEA,IAAInC,4CAAA,CAAAmC,UAAU,CAAA,CAAA,IAAV,CAAAA,UAAU,EAAS1B,IAAT,CAAV,KAA6B,CAAC,CAAlC,EAAqC;AAAA,QAAA,IAAA,SAAA,CAAA;;AACnC,QAAA,MAAM,IAAIhE,aAAJ,CAAkB,sBAAlB,EAEE0F,2CAAAA,CAAAA,SAAAA,GAAAA,sFAAAA,CAAAA,MAAAA,CAAAA,UAAU,CAACrE,IAAX,CAAgB,IAAhB,CAFF,EAAA,uBAAA,CAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAE8C2C,IAF9C,EAAN,aAAA,CAAA,CAAA,CAAA;AAID,OAAA;;AAED,MAAA,IAAMlB,OAAO,GAAG6C,kCAAA,CAAc,EAAd,EAAkBF,WAAlB,EAA+B;AAC7C,QAAA,cAAA,EAAA,EAAA,CAAA,MAAA,CAAmBzB,IAAnB,EAAA,iBAAA,CAAA;AAD6C,OAA/B,CAAhB,CAAA;;AAGA,MAAA,IAAM4B,GAAG,GAAG,IAAIhD,kBAAJ,CAAuBC,IAAvB,CAAZ,CAAA;MAEA+C,GAAG,CAACC,UAAJ,CAAe/C,OAAf,CAAA,CAAA;AAEA,MAAA,IAAA,CAAKkC,QAAL,CAAc1C,IAAd,CAAmBsD,GAAnB,CAAA,CAAA;AAEA,MAAA,OAAOA,GAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,aAAA,CAAcE,QAAd,EAAwB9B,IAAxB,EAA8BnB,IAA9B,EAAoD;MAAA,IAAhB4C,WAAgB,uEAAJ,EAAI,CAAA;;AAClD,MAAA,IAAM3C,OAAO,GAAG6C,kCAAA,CAAc,EAAd,EAAkBF,WAAlB,EAA+B;AAC7C,QAAA,cAAA,EAAA,EAAA,CAAA,MAAA,CAAmBzB,IAAnB,EAD6C,iBAAA,CAAA;AAE7C,QAAA,2BAAA,EAA6B,QAFgB;AAG7C,QAAA,qBAAA,EAAA,wBAAA,CAAA,MAAA,CAA+C8B,QAA/C,EAAA,IAAA,CAAA;AAH6C,OAA/B,CAAhB,CAAA;;AAKA,MAAA,IAAMF,GAAG,GAAG,IAAIhD,kBAAJ,CAAuBC,IAAvB,CAAZ,CAAA;MAEA+C,GAAG,CAACC,UAAJ,CAAe/C,OAAf,CAAA,CAAA;AAEA,MAAA,IAAA,CAAKkC,QAAL,CAAc1C,IAAd,CAAmBsD,GAAnB,CAAA,CAAA;AAEA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,gBAAA,CAAiB5B,IAAjB,EAAuB;AAAA,MAAA,IAAA,SAAA,CAAA;;AACrB,MAAA,IAAM+B,OAAO,GAAGhE,2CAAA,CAAA,SAAA,GAAA,IAAA,CAAKiD,QAAL,CAAA,CAAA,IAAA,CAAA,SAAA,EAAqB,UAAAgB,CAAC,EAAA;AAAA,QAAA,IAAA,SAAA,CAAA;;QAAA,OAAIzC,4CAAA,CAAA,SAAA,GAAAyC,CAAC,CAACZ,SAAF,CAAY,cAAZ,CAAoCpB,CAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAAA,IAApC,CAA8C,KAAA,CAAC,CAAnD,CAAA;AAAA,OAAtB,CAAhB,CAAA;;MACA,IAAIsB,KAAK,CAACC,OAAN,CAAcQ,OAAd,CAA0BA,IAAAA,OAAO,CAACE,MAAR,GAAiB,CAA/C,EAAkD;QAChD,OAAOF,OAAO,CAAC,CAAD,CAAd,CAAA;AACD,OAFD,MAGK;AACH,QAAA,OAAOxD,SAAP,CAAA;AACD,OAAA;AACF,KAAA;;;WAED,SAAiB,cAAA,GAAA;AAAA,MAAA,IAAA,SAAA,CAAA;;AACf,MAAA,OAAOR,2CAAKiD,CAAAA,SAAAA,GAAAA,IAAAA,CAAAA,QAAL,CAAqB,CAAA,IAAA,CAAA,SAAA,EAAA,UAAAgB,CAAC,EAAA;AAAA,QAAA,OAAIA,CAAC,CAACtC,YAAF,EAAA,KAAqB,IAAzB,CAAA;AAAA,OAAtB,KAAwD,EAA/D,CAAA;AACD,KAAA;;;WAED,SAAQ,KAAA,GAAA;MACN,IAAIf,KAAK,GAAG,IAAKG,CAAAA,OAAL,CAAa9B,IAAb,CAAkB,IAAK0B,CAAAA,MAAvB,CAAZ,CAAA;AAEA,MAAA,IAAMwD,gBAAgB,GAAG,IAAA,CAAKC,gBAAL,CAAsB,YAAtB,CAAzB,CAAA;AACA,MAAA,IAAMC,WAAW,GAAG,IAAA,CAAKD,gBAAL,CAAsB,WAAtB,CAApB,CAAA;AACA,MAAA,IAAME,cAAc,GAAG,IAAA,CAAKC,cAAL,EAAsBL,CAAAA,MAAtB,GAA+B,CAAtD,CAAA;MACA,IAAMM,eAAe,GAAGL,gBAAgB,YAAYtD,kBAA5B,IAAkDwD,WAAW,YAAYxD,kBAAjG,CAAA;;MAEA,IAAIyD,cAAc,IAAIE,eAAtB,EAAuC;AACrC,QAAA,OAAO,IAAKC,CAAAA,aAAL,CAAmB7D,KAAnB,CAAP,CAAA;OADF,MAGK,IAAI0D,cAAJ,EAAoB;AACvB,QAAA,OAAO,IAAKI,CAAAA,UAAL,CAAgB9D,KAAhB,CAAP,CAAA;OADG,MAGA,IAAI4D,eAAJ,EAAqB;AACxB,QAAA,OAAO,IAAKG,CAAAA,QAAL,CAAc/D,KAAd,CAAP,CAAA;AACD,OAFI,MAGA;AACH,QAAA,OAAO,IAAKgE,CAAAA,YAAL,CAAkBhE,KAAlB,CAAP,CAAA;AACD,OAAA;AACF,KAAA;;;WAED,SAAY,SAAA,GAAA;MACV,OAAO,IAAA,CAAKD,MAAL,CAAYkE,eAAZ,CAA6B,IAAKC,CAAAA,KAAL,EAA7B,CAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,YAAA,CAAalE,KAAb,EAAoB;AAAA,MAAA,IAAA,SAAA,CAAA;;AAClB,MAAA,IAAMuD,gBAAgB,GAAG,IAAA,CAAKC,gBAAL,CAAsB,YAAtB,CAAzB,CAAA;AACA,MAAA,IAAMC,WAAW,GAAG,IAAA,CAAKD,gBAAL,CAAsB,WAAtB,CAApB,CAAA;AACA,MAAA,IAAMlG,OAAO,GAAGmG,WAAW,IAAIF,gBAA/B,CAAA;AAEAvD,MAAAA,KAAK,GAAMA,2CAAAA,CAAAA,SAAAA,GAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAN,EACP1C,IAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAAA,OAAO,CAACe,IAAR,CAAa,IAAA,CAAK0B,MAAlB,EAA0B,IAAKc,CAAAA,UAA/B,CADO,CAAL,CAAA;AAGA,MAAA,OAAOb,KAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,QAAA,CAASA,KAAT,EAAgB;AAAA,MAAA,IAAA,SAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,CAAA;;AACd,MAAA,IAAMuD,gBAAgB,GAAG,IAAA,CAAKC,gBAAL,CAAsB,YAAtB,CAAzB,CAAA;AACA,MAAA,IAAMC,WAAW,GAAG,IAAA,CAAKD,gBAAL,CAAsB,WAAtB,CAApB,CAAA;MAEAxD,KAAK,GAAAgB,2CAAA,CAAA,SAAA,GAAAA,2CAAA,CAAA,UAAA,GAAAA,2CAAA,CAAA,UAAA,GAAAA,2CAAA,CAAA,UAAA,GAAAA,2CAAA,CAAA,UAAA,GAAAA,2CAAA,CAAA,UAAA,GAAA,EAAA,CAAA,MAAA,CAAMhB,KAAN,EACuC,kDAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAKa,UAAL,CAAgB0B,GADvD,8BAGL,IAAK1B,CAAAA,UAAL,CAAgB0B,GAHX,EAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAIPgB,gBAAgB,CAAClF,IAAjB,CAAsB,IAAK0B,CAAAA,MAA3B,EAAmC,IAAKc,CAAAA,UAAxC,CAJO,EAML,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAKA,UAAL,CAAgB0B,GANX,0BAOPkB,WAAW,CAACpF,IAAZ,CAAiB,IAAA,CAAK0B,MAAtB,EAA8B,IAAA,CAAKc,UAAnC,CAPO,EAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EASL,KAAKA,UAAL,CAAgB0B,GATX,EAAL,IAAA,CAAA,CAAA;AAWA,MAAA,OAAOvC,KAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,UAAA,CAAWA,KAAX,EAAkB;AAAA,MAAA,IAAA,UAAA;AAAA,UAAA,MAAA,GAAA,IAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA,CAAA;;AAChB,MAAA,IAAMuD,gBAAgB,GAAG,IAAA,CAAKC,gBAAL,CAAsB,YAAtB,CAAzB,CAAA;AACA,MAAA,IAAMC,WAAW,GAAG,IAAA,CAAKD,gBAAL,CAAsB,WAAtB,CAApB,CAAA;AACA,MAAA,IAAMlG,OAAO,GAAGmG,WAAW,IAAIF,gBAA/B,CAAA;;AACA,MAAA,IAAMY,WAAW,GAAG1F,wCAAA,CAAA,UAAA,GAAA,IAAA,CAAKkF,cAAL,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EACb,UAAAS,CAAC,EAAA;QAAA,OAAIA,CAAC,CAAC/F,IAAF,CAAO,MAAI,CAAC0B,MAAZ,EAAoB,MAAI,CAACc,UAAzB,CAAJ,CAAA;OADY,CAAA,CAEjBnC,IAFiB,CAEZ,EAFY,CAAA,CAGjBhB,OAHiB,CAGT,UAHS,EAGG,EAHH,CAApB,CAAA;;AAKAsC,MAAAA,KAAK,GAAMA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAN,EACiC,4CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAKa,UAAL,CAAgBI,KADjD,EAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAGL,IAAKJ,CAAAA,UAAL,CAAgBI,KAHX,0BAIP3D,OAAO,CAACe,IAAR,CAAa,IAAK0B,CAAAA,MAAlB,EAA0B,IAAA,CAAKc,UAA/B,CAJO,EAMPsD,MAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,UAAAA,EAAAA,WANO,EAQL,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAKtD,UAAL,CAAgBI,KARX,EAAL,IAAA,CAAA,CAAA;AAUA,MAAA,OAAOjB,KAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,aAAA,CAAcA,KAAd,EAAqB;AAAA,MAAA,IAAA,UAAA;AAAA,UAAA,MAAA,GAAA,IAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA;AAAA,UAAA,UAAA,CAAA;;AACnB,MAAA,IAAMuD,gBAAgB,GAAG,IAAA,CAAKC,gBAAL,CAAsB,YAAtB,CAAzB,CAAA;AACA,MAAA,IAAMC,WAAW,GAAG,IAAA,CAAKD,gBAAL,CAAsB,WAAtB,CAApB,CAAA;;AACA,MAAA,IAAMW,WAAW,GAAG1F,wCAAA,CAAA,UAAA,GAAA,IAAA,CAAKkF,cAAL,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EACb,UAAAS,CAAC,EAAA;QAAA,OAAIA,CAAC,CAAC/F,IAAF,CAAO,MAAI,CAAC0B,MAAZ,EAAoB,MAAI,CAACc,UAAzB,CAAJ,CAAA;OADY,CAAA,CAEjBnC,IAFiB,CAEZ,EAFY,CAAA,CAGjBhB,OAHiB,CAGT,UAHS,EAGG,EAHH,CAApB,CAAA;;AAKAsC,MAAAA,KAAK,GAAMA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,2CAAAA,CAAAA,UAAAA,GAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAN,EACiC,4CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAKa,UAAL,CAAgBI,KADjD,EAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAGL,IAAKJ,CAAAA,UAAL,CAAgBI,KAHX,EAIuC,kDAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAKJ,UAAL,CAAgB0B,GAJvD,EAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAML,IAAK1B,CAAAA,UAAL,CAAgB0B,GANX,EAOPgB,IAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,UAAAA,EAAAA,gBAAgB,CAAClF,IAAjB,CAAsB,IAAA,CAAK0B,MAA3B,EAAmC,IAAKc,CAAAA,UAAxC,CAPO,EAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EASL,IAAKA,CAAAA,UAAL,CAAgB0B,GATX,EAUPkB,IAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,UAAAA,EAAAA,WAAW,CAACpF,IAAZ,CAAiB,IAAA,CAAK0B,MAAtB,EAA8B,IAAKc,CAAAA,UAAnC,CAVO,EAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAYL,IAAKA,CAAAA,UAAL,CAAgB0B,GAZX,EAaP4B,MAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,UAAAA,EAAAA,WAbO,EAeL,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAKtD,UAAL,CAAgBI,KAfX,EAAL,IAAA,CAAA,CAAA;AAiBA,MAAA,OAAOjB,KAAP,CAAA;AACD,KAAA;;;AAED,IAAA,KAAA,EAAA,SAAA,QAAA,CAAS1B,CAAT,EAAY;AACV,MAAA,OAAO,KAAKyB,MAAL,CAAYR,QAAZ,CAAqBjB,CAArB,CAAP,CAAA;AACD,KAAA;;;;;;;;;;;;;AC3PH,IAAM+F,oBAAoB,GAAG;AAC3B9E,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBW,IAAlB,EAAwB;IAChC,OAAOoE,IAAI,CAACpE,IAAD,CAAX,CAAA;GAFyB;AAI3B+D,EAAAA,eAAe,EAAE,SAASA,eAAT,CAAyB/D,IAAzB,EAA+B;IAC9C,OAAOoE,IAAI,CAACpE,IAAD,CAAJ,CACJxC,OADI,CACI,KADJ,EACW,GADX,CAAA,CAEJA,OAFI,CAEI,KAFJ,EAEW,GAFX,CAAA,CAGJA,OAHI,CAGI,KAHJ,EAGW,EAHX,CAAP,CAAA;AAID,GAAA;AAT0B,CAA7B,CAAA;;IAYM6G;;;;;AACJ,EAAA,SAAA,eAAA,CAAYxE,MAAZ,EAAoB;AAAA,IAAAvC,mCAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;;IAAA,OACR6G,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,oBADQ,GACiBtE,MADjB,CAAA,CAAA,CAAA;AAEnB,GAAA;;;EAH2BqC;;AAMvB,SAASoC,iBAAT,CAA2BzE,MAA3B,EAAmC;AACxC,EAAA,OAAO,IAAIwE,eAAJ,CAAoBxE,MAApB,CAAP,CAAA;AACD;;;;"}